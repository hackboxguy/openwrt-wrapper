#!/bin/sh
CPU_TYPE_RP1="0xb76"
CPU_TYPE_RP2="0xc07"
CPU_TYPE_RP3="0xd03" #a02082
#Board types supported by BrBox
BD_TYP_RASPI_3="RASPI_3"
BD_TYP_RASPI_0="RASPI_0"
BD_TYP_RASPI_A="RASPI_A"
BD_TYP_RASPI_APLUS="RASPI_APLUS"
BD_TYP_RASPI_B="RASPI_B"
BD_TYP_RASPI_BPLUS="RASPI_BPLUS"
BD_TYP_RASPI_B2="RASPI_B2"
BD_TYP_BAYTRAIL="BAYTRAIL"
BD_TYP_BAYTRAIL_I210="BAYTRAIL_I210"
BD_TYP_X86_64="X86_64"
BD_TYP_X86_32="X86_32"
BD_TYP_BBB="BBB"
BD_TYP_A5V11="A5_V11"
BD_TYP_NEXX3020="NEXX_3020"
BD_TYP_GLMT300NV2="GL_MT300NV2"
BD_TYP_GLAR150="GL_AR150"
BD_TYP_HLKRM04="HLK_RM04"
BD_TYP_DEFAULT="Unknown"
###############################################################################
ReadRaspiType()
{
	RESULT=$(cat /proc/cpuinfo | grep "Revision" )
	if [ $? != "0" ]; then
		echo "$BD_TYP_DEFAULT"
		return 1
	fi
	RESULT=$(echo $RESULT | head -n1 | awk '{print $3}'  ) #head cmd is due to quadcore raspi
	if [ $? != "0" ]; then
		echo "$BD_TYP_DEFAULT"
		return 1
	fi

	#http://elinux.org/RPi_HardwareHistory
	[ "$RESULT" = "0007" ]  && { echo $BD_TYP_RASPI_A; return 0; }
	[ "$RESULT" = "0008" ]  && { echo $BD_TYP_RASPI_A; return 0; }
	[ "$RESULT" = "0009" ]  && { echo $BD_TYP_RASPI_A; return 0; }
	[ "$RESULT" = "0012" ]  && { echo $BD_TYP_RASPI_APLUS; return 0; }

	[ "$RESULT" = "0004" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "0005" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "0006" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "000d" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "000e" ]  && { echo $BD_TYP_RASPI_B; return 0; }
	[ "$RESULT" = "000f" ]  && { echo $BD_TYP_RASPI_B; return 0; }

	[ "$RESULT" = "0010" ]  && { echo $BD_TYP_RASPI_BPLUS; return 0; }
	[ "$RESULT" = "900093" ]  && { echo $BD_TYP_RASPI_0; return 0; }
	[ "$RESULT" = "a02082" ]  && { echo $BD_TYP_RASPI_3; return 0; }
	
	echo "$BD_TYP_DEFAULT"
	return 1
}
###############################################################################
ReadBaytrailType()
{
	RESULT=$(ethtool -i eth0 | grep driver)
	if [ $? != "0" ]; then
		echo "$BD_TYP_BAYTRAIL"
		return 1
	fi
	RESULT=$(echo $RESULT | grep igb)
	if [ $? != "0" ]; then
		echo "$BD_TYP_BAYTRAIL"
		return 1
	fi
	echo $BD_TYP_BAYTRAIL_I210
	return 0
}
###############################################################################
ReadBBBType()
{
	echo $BD_TYP_BBB
	return 0
}
###############################################################################
#look for raspi
RESULT=$(cat /proc/cpuinfo | grep "CPU part" )
if [ $? = "0" ]; then
	RESULT=$(echo $RESULT | head -n1 | awk '{print $4}'  )
	if [ $? != "0" ]; then
		echo $BD_TYP_DEFAULT
		return 1
	fi
	[ "$RESULT" = "$CPU_TYPE_RP1" ]  && { ReadRaspiType; return $?; }
	[ "$RESULT" = "$CPU_TYPE_RP2" ]  && { echo $BD_TYP_RASPI_B2; return 0; } #TODO: raspi-A2??
	[ "$RESULT" = "$CPU_TYPE_RP3" ]  && { echo $BD_TYP_RASPI_3; return 0; }  
fi

#look for Baytrail
RESULT=$(cat /proc/cpuinfo | grep "model name" | grep J1900 )
if [ $? = "0" ]; then
	ReadBaytrailType
	return $?
fi

#look for other intel pc's
RESULT=$(cat /proc/cpuinfo | grep "model name" | grep "Intel(R)" )
if [ $? = "0" ]; then
	RESULT=$(cat /proc/cpuinfo | grep "clflush size" | grep "64" )
	if [ $? = "0" ]; then
		echo $BD_TYP_X86_64
	else
		echo $BD_TYP_X86_32
	fi
	return 0
fi


#look for bbb
RESULT=$(cat /proc/cpuinfo | grep "Hardware" | grep "Generic AM33XX" )
if [ $? = "0" ]; then
	ReadBBBType
	return $?
fi

RESULT=$(cat /proc/cpuinfo | grep "machine" | grep "A5-V11" )
if [ $? = "0" ]; then
	echo $BD_TYP_A5V11
	return 0
fi

RESULT=$(cat /proc/cpuinfo | grep "machine" | grep "Nexx WT3020" )
if [ $? = "0" ]; then
	echo $BD_TYP_NEXX3020
	return 0
fi

RESULT=$(cat /proc/cpuinfo | grep "machine" | grep "GL-MT300N-V2" )
if [ $? = "0" ]; then
	echo $BD_TYP_GLMT300NV2
	return 0
fi

RESULT=$(cat /proc/cpuinfo | grep "machine" | grep "GL-AR150" )
if [ $? = "0" ]; then
	echo $BD_TYP_GLAR150
	return 0
fi

RESULT=$(cat /proc/cpuinfo | grep "machine" | grep "HILINK HLK-RM04" )
if [ $? = "0" ]; then
	echo $BD_TYP_HLKRM04
	return 0
fi

echo $BD_TYP_DEFAULT
return 1

